{
    "version": 1,
    "experiment name": "Selection Sort",
    "problems": [
        {
            "problem name": "Basic Selection Sort",
            "description": "Implement the selection sort algorithm for the given input array",
            "inputs": [
                [29, 10, 14, 37, 13]
            ],
            "expected": [10, 13, 14, 29, 37],
            "inputs description": "Input consists of an array of unsorted array. It may be of arbitrary length.",
            "expected description": "An array of numbers e.g. 1,2,4,5 sorted in ascending orders",
            "difficulty": "beginner"
        },
        {
            "problem name": "Simulate Selection Sort Process",
            "description": "Given an unsorted array and a number of steps, return the state of the array after performing the given number of steps of the selection sort algorithm.",
            "inputs": [
                [29, 10, 14, 37, 13],
                3
            ],
            "expected": [10, 13, 14, 37, 29],
            "inputs description": "Input consists of an array of unsorted numbers, and an integer representing the number of selection sort steps to perform.",
            "expected description": "An array representing the state of the input array after the given number of selection sort steps.",
            "difficulty": "intermediate"
        },
        {
            "problem name": "Selection Sort with Inversions Count",
            "description": "Implement the selection sort algorithm and count the number of inversions required to sort the array. An inversion is a pair of elements that are out of order.",
            "inputs": [
                [29, 10, 14, 37, 13]
            ],
            "expected": 4,
            "inputs description": "Input consists of an array of unsorted numbers.",
            "expected description": "An integer representing the number of inversions required to sort the array.",
            "difficulty": "intermediate"
        }

    ]
}